getwd()

hkspr = read.table("spring hkd.csv", sep=";", dec=".", header=T)

summary(hkspr)

hkspr$DATES = seq.Date(as.Date("2023-03-01"),
                       as.Date("2023-05-24"),
                       by="days")
hist(hkspr$HOKKAIDO.DAILY, freq = F, main = " Spring Hokkaido distribution", xlab = "Price (JPY/kWh)")

plot(hkspr$DATES, hkspr$HOKKAIDO.DAILY, type = "l", main = "Spring Hokkaido Price", xlab = "Time", ylab = "Price (JPY/kWh)"  )

plot(hkspr$DATES, hkspr$HOKKAIDO.DAILY, type = "l", col = 2, main = "Spring Price",ylim = c(3, 18), xlab = "Date", ylab = "Price  (JPY/kWh)" )
lines(hkspr$DATES, ksspr$KYUSHU.DAILY, col = 3)
legend("topleft", legend=c("Hokkaido", "Kyushu"),
       col=c("red", "green"), lty=1:1, cex=0.8)

adf.test(hkspr$HOKKAIDO.DAILY)
kpss.test(hkspr$HOKKAIDO.DAILY)


acf(hkspr$HOKKAIDO.DAILY, main = "ACF of Spring Hokkaido") 
pacf(hkspr$HOKKAIDO.DAILY, main = "PACF of Spring Hokkaido")


################################
hkspr_ts <- ts(hkspr$HOKKAIDO.DAILY, start = c(1,85), frequency = 7)
diffhkspr_ts <- diff(hkspr_ts, differences = 1, lag = 7)
plot.ts(hkspr_ts, ylim=c(-10,20),col = "blue", main = "Spring HKD original vs. seasonal difference", ylab = "Price  (JPY/kWh)") 
lines(diffhkspr_ts, col = "brown") 
legend("topleft", legend=c("Original Price", "Seasonal difference"),
       col=c("blue","brown"), lty=1:1, cex=0.7)

acf(diffhkspr_ts, main = "Spring HKD seasonal difference")
pacf(diffhkspr_ts, main = "Spring HKD seasonal difference")
#######################################
diffhkspr <- diff(diffhkspr_ts, differences = 1)
plot(diffhkspr, main = "Spring HKD first and seasonal difference", xlab = "Time", ylab= "")
adf.test(diffhkspr)
kpss.test(diffhkspr)
acf(diffhkspr, main = "ACF of Spring HKD transformed")
pacf(diffhkspr, main = "PACF of Spring HKD transformed")
############################

decomp = mstl(hkspr_ts, s.window="periodic")
deseasonal_cnt <- seasadj(decomp)
plot(decomp, main = "Spring HKD trend and seasonality decomposition")

#############################
fit11 <- arima(hkspr_ts,order = c(1,1,18), seasonal = c(0,1,1))
summary(fit11)
tsdisplay(residuals(fit11), lag.max = 90, main= 'Spring HKD
          ARIMA (1,1,18)(0,1,1) [7] model residuals')
hist(fit11$residuals, freq = F, main = "Histogram of Spring HKD residuals
  ARIMA(1,1,18)(0,1,1)[7]", xlab= "Residuals", ylim = c(0, 0.3))
lines(density(fit11$residuals), col="red")

Box.test(fit11$residuals, lag=40, type="Ljung-Box", fitdf =23)



fit21 <- auto.arima(hkspr_ts, seasonal = T)
summary(fit21)
tsdisplay(residuals(fit21), lag.max = 85)
Box.test(fit22$residuals, lag=10, type="Ljung-Box", fitdf =2)

fit11$aic
fit21$aic          
fit2$bic
fit1$b
##########################
hold <- window(hkspr_ts, start = 13)
fit_no_holdout = arima(train, order = c(1,1,18), seasonal = c(0,1,1,))
fcast_no_holdout <- forecast(fit_no_holdout, h = 7)
plot(fcast_no_holdout, ylim = c(-30, 70))
lines(hkspr_ts, col = 3)
#########################

set.seed(1)
df <- data.frame(hkspr)
head(df)
#use 70% of dataset as training set and 30% as test set
sample <- sample(c(TRUE, FALSE), nrow(df), replace=TRUE, prob=c(0.7,0.3))
train  <- df[sample, ]
test   <- df[!sample, ]


####################
fmod11 = forecast(fit11, h = 7)
fmod21 = forecast(fit21, h = 7)
plot(fmod11, main = "7 - day forecast for Spring HKD
     ARIMA(1,1,18)(0,1,1)[7]", xlab = "Time", ylab = "Price (JPY/kWh)")
plot(fmod21,  main = "7 - day forecast for Spring HKD
     AUTO.ARIMA(1,0,1)", xlab = "Time", ylab = "Price (JPY/kWh)")

#############################
dfforecast <- data.frame(fmod12)
dfforecast$DATESnew = seq.Date(as.Date("2023-05-25"),
                       as.Date("2023-05-31"),
                       by="days")
plot(dfforecast$DATESnew,dfforecast$Point.Forecast,type = "l", main = "Forecast 7 day - ahead of Spring Hokkaido price", xlab = "Date", ylab = "Price (JPY/kWh)")
plot(fmod11)
fmod11
fmod21

write.csv(x = fmod11, file = "spring hkd.csv")

